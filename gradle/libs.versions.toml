[versions]
spring-boot = "3.4.5"
spring-dependency-management = "1.1.7"
spring-cloud = "2024.0.1"
mapstruct = "1.6.3"
grpc-version = "0.8.0"
protobuf = "0.9.5"


[libraries]
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web" }
junit = { module = "org.junit.platform:junit-platform-launcher"}
spring-security = { module = "org.springframework.boot:spring-boot-starter-security" }
eureka-client = { module = "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client" }
config-server = { module = "org.springframework.cloud:spring-cloud-starter-config" }
data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
postgreSQL-driver = { module = "org.postgresql:postgresql" }
lombok = { module = "org.projectlombok:lombok" }
liquidBase = { module = "org.liquibase:liquibase-core" }
mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapstruct" }
mapstruct-processor = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstruct" }
bean-validation = { module = "org.springframework.boot:spring-boot-starter-validation" }
grpc = { module = "org.springframework.grpc:spring-grpc-spring-boot-starter" }
kafka = { module = "org.springframework.kafka:spring-kafka" }
kafka-test = { module = "org.springframework.kafka:spring-kafka-test" }
circuit-breaker = { module = "org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j" }
actuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }

[plugins]
spring-framework-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
protobuf = { id = "com.google.protobuf", version.ref = "protobuf" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dependency-management" }

[bundles]
core = ["spring-boot-starter-test", "spring-boot-starter", "junit", "actuator"]
business-service = ["eureka-client", "spring-boot-starter-web", "config-server", "lombok", "mapstruct", "bean-validation", "kafka", "kafka-test", "grpc", "spring-security", "circuit-breaker"]
business-service-additional = ["postgreSQL-driver", "liquidBase", "liquidBase", "data-jpa"]





