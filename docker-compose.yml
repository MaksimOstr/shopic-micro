services:
  auth-service-db:
    image: postgres
    restart: always
    ports:
      - "${AUTH_DB_PORT}:5432"
    volumes:
      - /postgres/auth-service/
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${AUTH_DB_NAME}

  user-service-db:
    image: postgres
    restart: always
    ports:
      - "${USER_DB_PORT}:5432"
    volumes:
      - /postgres/user-service/
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${USER_DB_NAME}

  order-service-db:
    image: postgres
    restart: always
    ports:
      - "${ORDER_DB_PORT}:5432"
    volumes:
      - /postgres/order-service/
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${ORDER_DB_NAME}

  code-service-db:
    image: postgres
    restart: always
    ports:
      - "${CODE_DB_PORT}:5432"
    volumes:
      - /postgres/code-service/
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${CODE_DB_NAME}

  product-service-db:
    image: postgres
    restart: always
    ports:
      - "${PRODUCT_DB_PORT}:5432"
    volumes:
      - /postgres/product-service/
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${PRODUCT_DB_NAME}
    command: >
      -c wal_level=logical
      -c max_wal_senders=8
      -c max_replication_slots=8

  cart-service-db:
    image: postgres
    restart: always
    ports:
      - "${CART_DB_PORT}:5432"
    volumes:
      - /postgres/cart-service/
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${CART_DB_NAME}

  payment-service-db:
    image: postgres
    restart: always
    ports:
      - "${PAYMENT_DB_PORT}:5432"
    volumes:
      - /postgres/payment-service/
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${PAYMENT_DB_NAME}

  review-service-db:
    image: postgres
    restart: always
    ports:
      - "${REVIEW_DB_PORT}:5432"
    volumes:
      - /postgres/review-service/
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${REVIEW_DB_NAME}

  kafka:
    image: apache/kafka:latest
    restart: always
    container_name: kafka
    hostname: kafka
    volumes:
      - /kafka/data
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_KRAFT_MODE: "true"
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://0.0.0.0:9093,PLAINTEXT_HOST://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9094
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: 3

  debezium:
    image: debezium/connect:2.7.3.Final
    depends_on:
      - kafka
      - product-service-db
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: connectors
      CONNECT_STATUS_STORAGE_TOPIC: connector-status
      CONFIG_STORAGE_TOPIC: debezium_configs
      OFFSET_STORAGE_TOPIC: debezium_offsets
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
    ports:
      - "8083:8083"

  elasticsearch:
    image: elasticsearch:9.0.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - /esdata/usr/share/elasticsearch/data

  redis:
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - /redis/data
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}", "--appendonly", "yes"]

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    environment:
      DYNAMIC_CONFIG_ENABLED: true

  pg-admin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - '4040:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PG_PASSWORD}

networks:
  kafka_net:
    driver: bridge
